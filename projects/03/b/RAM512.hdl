// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    DMux8Way(in=true, sel=address[6..8], a=r1, b=r2, c=r3, d=r4, e=r5, f=r6, g=r7, h=r8);
    And(a=r1, b=load, out=l1);
    And(a=r2, b=load, out=l2);
    And(a=r3, b=load, out=l3);
    And(a=r4, b=load, out=l4);
    And(a=r5, b=load, out=l5);
    And(a=r6, b=load, out=l6);
    And(a=r7, b=load, out=l7);
    And(a=r8, b=load, out=l8);
    RAM64(in=in, load=l1, address=address[0..5], out=o1);
    RAM64(in=in, load=l2, address=address[0..5], out=o2);
    RAM64(in=in, load=l3, address=address[0..5], out=o3);
    RAM64(in=in, load=l4, address=address[0..5], out=o4);
    RAM64(in=in, load=l5, address=address[0..5], out=o5);
    RAM64(in=in, load=l6, address=address[0..5], out=o6);
    RAM64(in=in, load=l7, address=address[0..5], out=o7);
    RAM64(in=in, load=l8, address=address[0..5], out=o8);
    Mux8Way16(a=o1, b=o2, c=o3, d=o4, e=o5, f=o6, g=o7, h=o8, sel=address[6..8], out=out);
}
